#!/usr/bin/env python3
"""
1. Async Comprehensions

This script uses a coroutine, gather_random_numbers,
to collect 10 random numbers.
It achieves this by using an async comprehension over
an imported async_generator coroutine.
The gathered random numbers, potentially floating-point,
are then returned.
"""
import asyncio
from typing import List

# Importing async_generator from another script
async_generator = __import__('0-async_generator').async_generator


async def gather_random_numbers() -> List[float]:
    """
    Coroutine to gather 10 random numbers using async comprehension.

    It asynchronously iterates over values generated by async_generator
    and collects them into a list.

    Returns:
        List[float]: A list of 10 randomly generated numbers.
    """
    # Collecting random numbers using async comprehension
    collected_numbers = [await num async for num in async_generator()]
    return collected_numbers
